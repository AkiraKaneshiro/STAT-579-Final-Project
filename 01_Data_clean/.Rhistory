giants = ldply(2010:2014, getBBdata, team = "SFG")
giants = subset(giants, V2 != "Rk")
write.csv(giants, "temp-file.csv", row.names = FALSE)
giants = read.csv("temp-file.csv")
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
giants = ldply(2010:2014, getBBdata, team = "SFG")
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
jays = ldply(2011:2013, getBBdata, team = "TOR")
head(jays)
jays[2,]
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
jays$hand = "R"
jays$hand[grep("#", jays$name)  ] = "B"
jays$hand[grep("*", jays$name, fixed = TRUE)  ] = "L"
jays[2,]
jays$hand = "R"
jays$hand[grep("#", jays$Name)  ] = "B"
jays$hand[grep("*", jays$Name, fixed = TRUE)  ] = "L"
jays[2,]
library(ggplot2)
qplot(data = jays, year, OPS,geom='line',group=Player)
qplot(data = jays, year, OPS,geom='line',group=Name)
head(jays)
names(jays)
names(jays)[1]
jays$names(jays)[2]
dim(jays)
jays[1,2]
jays[1,]
jays$Age
qplot(data = jays, year, OPS,geom='line',group=Name)
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
head(table)
table
str(table)
str(tables)
dim(tables)
names(tables)
str(tables)
head(tables)
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
head(tables)
ldply(tables, dim)
schedule = tables[[1]]
names(schedule)
str(schedule[1,])
is.list(schedule)
str(unlist(schedule[1,]))
names(schedule) = as.character(unlist(schedule[1,]))
head(tables)
qbdata = tables$`NULL`
qbdata
tables
tables
tables$NULL
tables$'NULL'
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
library(plyr)
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
library(dplyr)
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
library(XML)
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
jays$hand = "R"
jays$hand[grep("#", jays$Name)  ] = "B"
jays$hand[grep("*", jays$Name, fixed = TRUE)  ] = "L"
jays$Name[1,]
jays$Name[1]
jays$Name[2]
gsub("*"," ", jays$Name[2])
gsub(".**","\\t", jays$Name[2])
gsub(".*.","\\t", jays$Name[2])
gsub(".*[*]*.","\\t", jays$Name[2])
gsub(".*[*]*.","", jays$Name[2])
gsub(".*[\*]*.","", jays$Name[2])
gsub(".*[\*/]*.","", jays$Name[2])
gsub(".*[\*]","\\1", jays$Name[2])
gsub("[\*]","\\1", jays$Name[2])
gsub("\*","\\1", jays$Name[2])
gsub("\*","\\1", jays$Name[2])
jays$Name[2]
gsub("([\*])","\\1", jays$Name[2])
gsub((\*,"\\1", jays$Name[2])
gsub(\*,"\\1", jays$Name[2])
gsub("\*","\\1", jays$Name[2])
jays$Name[3]
jays$Name[4]
jays$Name[5]
jays$Name[75]
jays$Name[68]
jays$Name[65]
gsub("#","\\1", jays$Name[65])
jays$Name[2]
gsub("\\*","\\1", jays$Name[2])
length(jays)
length(jays$Name)
jays[1,2]
jays[1,]
dim(jays)
length(jays[1])
length(jays[1,])
for(i in 1:length(jays$Name)){
for(j in 1:length(jays[1,])){
if(jays[i,j]== ""){
jays[i,j] = NA
}
}
}
for(i in 1:length(jays$Name)){
for(j in 1:length(jays[1,])){
if(jays[i,j]== " "){
jays[i,j] = NA
}
}
}
for(i in 1:length(jays$Name)){
for(j in 1:length(jays[1,])){
if(jays[i,j]== NULL){
jays[i,j] = NA
}
}
}
jays[30,13]
jays[30,14]
jays[30,18]
length(jays[1,])
library(XML)
library(plyr)
library(dplyr)
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
jays$hand = "R"
jays$hand[grep("#", jays$Name)  ] = "B"
jays$hand[grep("*", jays$Name, fixed = TRUE)  ] = "L"
jays[30,18]
for(i in 1:length(jays$Name)){
for(j in 1:length(jays[1,])){
if(jays[i,j] == "NA"){
jays[i,j] = 0
}
}
}
for(i in 1:length(jays$Name)){
for(j in 1:length(jays[1,])){
if(jays[i,j] == NA){
jays[i,j] = 0
}
}
}
for(i in 1:length(jays$Name)){
for(j in 1:length(jays[1,])){
if(jays[i,j] == NULL){
jays[i,j] = 0
}
}
}
jays[30,18]
library(ggplot2)
qplot(data = jays, year, OPS,geom='line',group=Name)
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
tables
tables
data = read.csv("business.csv")
data = read.csv("/Users/chelsey1221/Desktop/business.csv")
data = read.csv("/Users/chelsey1221/Desktop/yelp/business.csv")
dim(data)
str(data)
names(data)
data[1,]
data[1,1]
data[1,3]
length(data$type)
length(data[1,])
for(i in 1:length(data$type){
for(j in 1:length(data[1,])){
if(data[i,j] == NULL){
data[i,j] = NA
}
}
}
data = read.csv("/Users/chelsey1221/Desktop/businesssmaller.csv")
dim(dat)
dim(data)
data[1,1]
levels(data$categories)
mean(data$attributes_Price Range)
mean(data$attributes_PriceRange)
mean(data$attributes_PriceRange, na.omit)
mean(data$attributes_PriceRange, na.omit= TRUE)
?mean
mean(data$attributes_PriceRange, na.rm= TRUE)
levels(data$attributes_PriceRange)
head(data$attributes_PriceRange)
names(data)
mean(data$attributes_Price.Range, na.rm= TRUE)
data = read.csv("/Users/chelsey1221/Desktop/businesssmaller.csv")
head(data)
names(data)
data = read.csv("/Users/chelsey1221/Desktop/businesssmaller.csv")
names(data)
data = read.csv("/Users/chelsey1221/Desktop/businesssmaller.csv")
names(data)
data[1,1]
for(i in 1:length(data$type){
for(j in 1:length(data[1,])){
if(data[i,j] == NULL){
data[i,j] = NA
}
}
}
for(i in 1:length(data$stars){
for(j in 1:length(data[1,])){
if(data[i,j] == NULL){
data[i,j] = NA
}
}
}
for(i in 1:length(data$stars)){
for(j in 1:length(data[1,])){
if(data[i,j] == NULL){
data[i,j] = NA
}
}
}
data[1,3]
library(ggplot)
library(ggplot2)
qplot(attributes_Price.Range, data = data)
qplot(attributes_Price.Range, data = data, colour = state )
qplot(attributes_Price.Range, data = data, colour = attribute_Noise.Level )
qplot(attributes_Price.Range, data = data, colour = attributes_Noise.Level )
qplot(attributes_Price.Range, data = data, fill = attributes_Noise.Level )
qplot(attributes_Price.Range, data = data, fill = attributes_Noise.Level, na.rm=TRUE )
qplot(review, data = data, fill = attributes_Noise.Level, na.rm=TRUE )
qplot(review_count, data = data, fill = attributes_Noise.Level, na.rm=TRUE )
qplot(review_count, data = data )
qplot(stars, data = data )
qplot(stars, data = data, fill= attributes_Delivery )
aplot(latitude, longitude, data = data)
qplot(latitude, longitude, data = data)
qplot(latitude, longitude, data = data, colour = stars)
qplot(latitude, longitude, data = data, shape = stars)
qplot(latitude, longitude, data = data, colour = stars)
qplot(attributes_Has.TV,data = data, colour = attributes_Alcohol )
qplot(attributes_Has.TV,data = data, fill = attributes_Alcohol )
data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T),
reviecount= sum(review_count, na.rm = T),
n = length(data$state),
)
data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T),
reviewcount= sum(review_count, na.rm = T),
n = length(data$state),
)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T),
reviewcount= sum(review_count, na.rm = T),
n = length(data$state),
)
qplot(meanstars, data = data.sub)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T),
reviewcount= sum(review_count),
n = length(data$state),
)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T),
n = length(data$state),
)
meanstars = mean(stars, na.rm = T),
meanstars = mean(stars, na.rm = T)
meanstars = mean(stars, na.rm = TRUE)
meanstars = mean(data$stars, na.rm = TRUE)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(data$stars, na.rm = TRUE),
n = length(data$state),
)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = TRUE),
n = length(state),
)
library(dplyr)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = TRUE),
n = length(state),
)
library(dply)
library(plyr)
data.sub =data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = TRUE),
n = length(state),
)
data.sub =data %>%
group_by(state) %>%
)
# Subsets
datasub = data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = TRUE),
#n = length(state),
)
datasub = data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T),
#n = length(state),
)
datasub = data %>%
group_by(state) %>%
summarize (
meanstars = mean(stars, na.rm = T)
#n = length(state),
)
qplot(meanstars, data = datasub)
qplot(meanstars, data = datasub, fill = state)
qplot(stars, data = data, facets = ~state )
qplot(stars, data = data, facets = ~state, na.omit= T )
qplot(stars, data = data, facets = ~state, colour = review_count )
qplot(stars, data = data, facets = ~state, colour = open )
qplot(stars, data = data, facets = ~state, colour = attributes_Alcohol )
qplot(stars, data = data, facets = ~state, fill = attributes_Alcohol )
levels(data$city)
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
#Part of data cleaning
jays = ldply(1986:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
jays$hand = "R"
jays$hand[grep("#", jays$Name)  ] = "B"
jays$hand[grep("*", jays$Name, fixed = TRUE)  ] = "L"
for (i in 1:length(jays$Names)){
gsub("#","\\1", jays$Name[i])
gsub("\\*","\\1", jays$Name[i])
}
jays[30,18]
library(ggplot2)
qplot( year, OPS,data = jays, geom='line',group=Name)
qplot( year, OPS,data = jays, geom='line',group=Name, colour = NAME)
qplot( year, OPS,data = jays, geom='line',group=Name, colour = Name)
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
tables
url = "http://www.soccerstats.com/latest.asp?league=usa"
tables= readHTMLTable(url)
tables
url = "http://www.mlssoccer.com/stats/team"
tables= readHTMLTable(url)
tables
write.csv( tables,"/Users/chelsey1221/Desktop")
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
tables$'NULL'
write.csv( tables,"/Users/chelsey1221/Desktop")
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
library(XML)
url = "http://espn.go.com/nhl/team/stats/_/name/bos/boston-bruins"
tables= readHTMLTable(url)
write.csv( tables,"/Users/chelsey1221/Desktop")
write.csv( tables$'NULL',"/Users/chelsey1221/Desktop")
write.csv( tables$'NULL',"/Users/chelsey1221/Desktop/soccerdata")
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
library(plyr)
jays = ldply(2011:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
jays$hand = "R"
jays$hand[grep("#", jays$Name)  ] = "B"
jays$hand[grep("*", jays$Name, fixed = TRUE)  ] = "L"
getBBdata = function(year, team){
url = "http://www.baseball-reference.com/teams/TTT/YYYY.shtml"
url = gsub("YYYY", year, url)
url = gsub("TTT", team, url)
tables= readHTMLTable(url)
dframe = tables$team_batting
dframe$year = year
dframe$team = team
return(dframe)
}
#Part of data cleaning, get rid of extra rows headings
jays = ldply(1986:2013, getBBdata, team = "TOR")
jays = subset(jays, jays$Rk != "Rk")
write.csv(jays, "temp-file.csv", row.names = FALSE)
jays = read.csv("temp-file.csv")
#Add in handedness variable
jays$hand = "R"
jays$hand[grep("#", jays$Name)  ] = "B"
jays$hand[grep("*", jays$Name, fixed = TRUE)  ] = "L"
# More cleaning of the data
#Get rid of the extra symbols
for (i in 1:length(jays$Names)){
gsub("#","\\1", jays$Name[i])
gsub("\\*","\\1", jays$Name[i])
}
library(ggplot2)
# Plot of year vs OPS with players connected
qplot( year, OPS,data = jays, geom='line',group=Name)
write.csv(jays, "/Users/chelsey1221/Desktop/jays")
url = "http://www.mlssoccer.com/stats/team"
tables= readHTMLTable(url)
tables
write.csv(tables, "/Users/chelsey1221/Desktop/soccerdata")
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
install.packages("SQL")
install.packages("RMySQL")
install.pakages("RMySQL")
install.packages("RMySQL")
